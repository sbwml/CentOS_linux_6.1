name: Linux Kernel 6.1

on:
  watch:
    types: started

jobs:
  build:
    name: Build Linux Kernel
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    container:
      image: centos:7

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Setting up the environment
      run: |
        curl -s https://repo.cooluc.com/mailbox.repo > /etc/yum.repos.d/mailbox.repo
        yum makecache
        yum install -y centos-release-scl-rh centos-release-scl
        yum install -y rpmdevtools devtoolset-10-gcc devtoolset-10-binutils devtoolset-10-runtime curl scl-utils asciidoc bc bison elfutils-libelf-devel gcc gettext m4 newt-devel net-tools openssl openssl-devel rsync xmlto dwarves libcap-devel ncurses-devel pciutils-devel sed

    - name: Check Linux Kernel Version
      run: |
        # the original commit does not seem to be readable inside the container, so use github api.
        TAGS=$(curl -sk https://api.github.com/repos/sbwml/centos_linux_6.1/tags | grep "name")
        LATEST_VERSION=$(curl -s https://cdn.kernel.org/pub/linux/kernel/v6.x/sha256sums.asc | awk '{print $2}' | grep -E ^linux-6.1 | grep tar.xz | sed 's/linux-//g;s/.tar.xz//g' | tail -n 1)
        echo "VERSION=$LATEST_VERSION" >> "$GITHUB_ENV"
        if [[ "$TAGS" == *"$LATEST_VERSION"* ]]; then
            echo -e " \n\e[1;32mlinux-v$LATEST_VERSION is already the latest lts version.\e[0m\n"
            exit 0
        else
            echo "next=true" >> "$GITHUB_ENV"
            echo "TOP=$(pwd)" >> "$GITHUB_ENV"
        fi

    - name: Build Linux Kernel
      if: env.next == 'true'
      run: |
        ls
        pwd
        DATE=$(date +"%a %b %d %Y")
        echo "* $DATE sbwml <admin@cooluc.com> - ${{ env.VERSION }}-1" >> kernel.spec
        echo "- Updated with the ${{ env.VERSION }} source tarball." >> kernel.spec
        echo "- [https://www.kernel.org/pub/linux/kernel/v6.x/ChangeLog-${{ env.VERSION }}]" >> kernel.spec

        sed -i "s/KERNEL_VERSION/${{ env.VERSION }}/g" kernel.spec
        mkdir -pv rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}
        cp kernel.spec rpmbuild/SPECS/kernel-${{ env.VERSION }}.spec
        cp config rpmbuild/SOURCES/config-${{ env.VERSION }}-x86_64
        cp -a src/* rpmbuild/SOURCES/
        curl -L -k https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-${{ env.VERSION }}.tar.xz -o rpmbuild/SOURCES/linux-${{ env.VERSION }}.tar.xz
        mv rpmbuild ~/
        # build
        pushd ~/rpmbuild
            rpmbuild -ba SPECS/kernel-${{ env.VERSION }}.spec
            mkdir ${{ env.TOP }}/out
            cp -a RPMS ${{ env.TOP }}/out/
            cp -a SRPMS ${{ env.TOP }}/out/
        popd

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: kernel-${{ env.VERSION }}
        path: ${{ env.TOP }}/out/*
